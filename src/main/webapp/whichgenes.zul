<!-- 
	This file is part of WhichGenes.

    WhichGenes is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    WhichGenes is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with Lesser.  If not, see <http://www.gnu.org/licenses/
 -->
<?meta description="WhichGenes is a bioinformatics tool for retrieve and create gene sets in order to use them for further experiments. It accesses third party free on-line databases by demand keeping its results up-to-date" keywords="bioinformatics, genes, gene set, affymetrix, gene, tool, bioinformatics tool, geneset, ensembl, reactome, kegg" ?>

<?component name="genesetbasket" class="es.uvigo.ei.sing.whichgenes.zkgui.BasketMiniView" extends="window"?>
<?component name="basketmanager" class="es.uvigo.ei.sing.whichgenes.zkgui.BasketManager" extends="vbox"?> 
<?component name="multiplequerymanager" class="es.uvigo.ei.sing.whichgenes.zkgui.MultipleQueryManager" extends="vbox"?>
<?component name="freequerybox" class="es.uvigo.ei.sing.whichgenes.zkgui.FreeQueryBox" extends="groupbox"?>
<?component name="constrainedquerybox" class="es.uvigo.ei.sing.whichgenes.zkgui.ConstrainedQueryBox" extends="groupbox"?>
<?component name="loginbox" class="es.uvigo.ei.sing.whichgenes.zkgui.LoginBox" extends="vbox"?>

<borderlayout id="applayout" height="1370px" style="background-color:white" >
	
	<north maxsize="300" size="200" border="none" splittable="false" collapsible="false">
		
		<vbox width="100%" style="z-index:0;">
			<div id="timers">
			<timer delay="0" repeats="false" onTimer="autologin()" id="autologintimer"/>
			</div>
		<div style="text-align:right;background-image:url('titlebackground.png');">
			
			<hbox width="750px" style="margin:0 auto">
			<html width="100%">
			<![CDATA[
			<script type="text/javascript">
			var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
			document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
			</script>
			<script type="text/javascript">
			try {
			var pageTracker = _gat._getTracker("UA-7580134-4");
			pageTracker._trackPageview();
			} catch(err) {}</script>

				 <table width="700px" align="center">
				<tr>
					<td width="35%" valign="top">
					<span style="color:#5A2D5F;font-size:1.15em;font-weight:bold">Gene Set building tool</span><br>				 
					<table style="margin-left:10px;line-height:15px;color:white;">
					<tr>
								
						<td valign="top">WhichGenes is a powerful gene set building tool. It allows the user to extract lists of genes from multiple sources in order to use them for further experiments.<div style="display:none"><img src="http://sing.ei.uvigo.es/~lipido/jwebstats/shared/Contar.php?idcont=1222379205"></div>
						</td>
					</tr>
					</table>
			
				</td>
				 <td valign="top" align="left" width="65%">
					 
						 <span style="text-align:right; color:#C69200;font-size:1.15em;font-weight:bold">Quick Start</span><br>					 
							 <table style="margin-left:10px;margin-top:0px;line-height:15px;color:white;"><tr>
									 
						<td valign="top">
						1. Select the <b>organism</b> of interest.<br>
						2. Select the <b>source</b> for extraction.<br>
						3. Configure the <b>query</b>.<br>
												
						</td>
						<td valign="top">
						4. Retrieve and give a <b>name</b> to your new set.<br>
						5. Manage your gene-set cart.<br>					
						6. <b>Export</b> your sets to your favourite format.
					</td></tr></table>
					 
				 </td>
				 </tr>
			 	</table>
								
			]]>
			</html>
			<div style="position:relative;z-index:3"><image src="logo.png" > </image></div>
			</hbox>
		</div>
			<label id="messages" style="color:red" visible="false"></label>
			<div width="1000px" style="z-index:10;position:relative;align:right; margin: 0 auto" height="30px"><hbox  id="hellobox" visible="false"><image src="user.png"/><label style="color:black" value="" id="welcome"/><button label="logout" onClick="loginbox.doLogout();" id="logoutbutton"/></hbox></div>
		</vbox>

	</north> 
	
	<center border="0" style="padding-left:10px;padding-right:10px;margin-top:0px;top:140px;background-color:transparent;z-index:11;" >
		<vbox width="100%" height="100%" visible="false" id="centerbox">
		
			<hbox id="presentation" widths="690px,200px" style="margin:0 auto;text-align:center;align:center">
				<groupbox style="margin-top:0px;margin-right:15px;" mold="3d" width="690px">
					<caption label="Welcome!"/>
					<div>
					<html>
						<![CDATA[
							<h2>What is <b>WhichGenes</b>?</h2>
							<table border="0" cellpadding="4px" cellspacing="0" width="680px"><tr><td valign="top" width="50%">
							<p>
								WhichGenes is a bioinformatics gene set building tool. It allows the user to create and manage custom genesets extracted from
								several sources. Currently, WhichGenes can extract genes from:
								]]>
					</html>
					<div><html id="sourceslabel"/> </div>
					<html>
						
						<![CDATA[
							  
							</p>
							
						</td><td valign="top" width="50%"><img src="whichgenes1.png"></img><br>
								<h3>Open-Source</h3>
								<p>
									WhichGenes is an open-source project. Moreover, it is intended to be extensible, specially when adding new sources to extract gene lists
									
								</p>
								<h3>DB-Free</h3>
								<p>
									WhichGenes tries to avoid the use of a local database (wherever it is possible) in order to retrieve up-to-date gene lists coming directly from the third party databases (CTD, KEGG, AmiGO, etc.)<br>
										
								</p>
								<h3 style="text-align:left">Start now!</h3>
								<p>
								In order to use WhichGenes, you have two choices:
								<ol>
									<li>Create an account. With this option you will need to provide an email an you will have some advantages like <b>notifications of the finalization of large processes</b> or <b>automatic gene list saving in our server</b>. Press in the "New user" button in the login box on the top-right of this screen.</li>
									<li>Anonymous use. Start using Which Genes without user name!</li>
								</ol>
								<img src="whichgenes2.png">
								</p>
							</td></tr></table>
							<p>
								
							</p>
							
							
						
							]]>
					</html>
				</div>
				</groupbox>
					<div style="margin-top:0px" width="270px">
						<groupbox mold="3d"><caption label="Anonymous Login"/><vbox><div style="text-align:left"><button style="margin-bottom:10px" label="Enter anonymously" onClick="applayout.height=&quot;1100px&quot;;hellobox.visible=true;whichmodel.visible=false;presentation.visible=false;tabbox.visible=true;welcome.value=&quot;Welcome anonymous&quot;;logoutbutton.label=&quot;Back to home&quot;;examplesadvice.open(sampleslink);"/></div><label style="font-size:0.8em">Please note: In anonymous mode you will not be able to receive e-mail notifications</label></vbox></groupbox> OR
						<loginbox width="100%" onLogin="applayout.height=&quot;1100px&quot;;whichmodel.visible=false;hellobox.visible=true;presentation.visible=false;tabbox.visible=true;welcome.value=&quot;Welcome &quot;+event.data.name+&quot; (&quot;+event.data.email+&quot;)&quot;" onLogout="" id="loginbox"/>
						
						<html>
						<![CDATA[
						<table width="100%" cellpadding="0" cellspacing="0">
							<tr>
								<td align="center">
									<br>
										<h2><img src="developers.png">&nbsp;developers</h2><br>
										<p align="left">	
										Check-out our <a href="/api/">RESTful API!</a>
										</p>
										<p align="left">	
										Source code is available at: <br>										
										<a href="https://github.com/sing-group/whichgenes">GitHub</a><br>
										<a href="http://www.sourceforge.net/projects/whichgenes">SourceForge (old versions)</a>
										</p>
									
								</td>
							</tr>
							<tr>
								<td align="center">
									<br>
										<h3>Citing WhichGenes</h3><br>
										<p align="left">	
										Please cite the use of WhichGenes as: <br>
										Glez-Peña,D., Gómez-López,G., Pisano,D.G., Fdez-Riverola,F. (2009). WhichGenes: a web-based tool for gathering, building, storing and exporting gene sets with application in gene set enrichment analysis. <i>Nucleic Acids Res.</i> <br><br>
										<a href="http://nar.oxfordjournals.org/cgi/content/full/gkp263v1">http://nar.oxfordjournals.org/cgi/content/full/gkp263v1</a>
									</p>
										
									</td>
							</tr>
							
							<tr>
								<td align="center">
									<br>
									<h3>Powered by (currently)</h3><br>
										<a href="http://www.ensembl.org/index.html"><img alt="Ensembl Genome Browser" src="sources/ensembl.png" border="0"></img></a><br>
										
										<!-- pathways -->
										<a href="http://www.genome.ad.jp/kegg/pathway.html"><img alt="KEGG Pathway Database" src="sources/kegg.gif" border="0"></img></a>
										<a href="http://www.biocarta.com"><img alt="Biocarta Pathway Database" src="sources/biocarta.png" border="0"></img></a>
										
										<!-- positional -->
										<a href="http://www.broad.mit.edu/gsea/msigdb/index.jsp"><img alt="Molecular Signatures Database" src="sources/msigdb.gif" border="0"></img></a>
										
										<!-- disease -->
										<a href="https://decipher.sanger.ac.uk/"><img alt="Sanger's Decipher Database" src="sources/sanger.png" border="0"></img></a>
										<a href="http://ctd.mdibl.org/"><img alt="Comparative Toxicogenomics Database" src="sources/ctd.png" border="0"></img></a>
										
										<!-- others -->
										<a href="http://amigo.geneontology.org"><img alt="AmiGO" src="sources/amigo.png" border="0"></img></a>
										<a href="http://www.ebi.ac.uk/intact"><img alt="EBI's IntAct Database" src="sources/intact.png" border="0"></img></a>
										
										
								</td>
							</tr></table>]]>
						</html>
				</div>
				</hbox>
		
		<tabbox  width="1000px" visible="false" id="tabbox" style="margin: 0 auto" >
			<tabs style="" id="tabs">
				<tab label="create set" image="search.png"/>
				<tab id="baskettab" label="gene-set cart" image="cart.png"/>
			</tabs>
		<tabpanels id="tabpanels">
			<tabpanel height="100%">
			<vbox width="100%">
				<div id="popups">
				<popup id="samples" action="onshow:anima.appear(#{self});">
					<vbox>
					<label style="font-weight:bold; border-bottom:1px solid black">These examples will perform all steps needed to configure queries</label>
					<label> </label>
					<hbox><button id="sample" label="load example 1" onClick="samples.close();demo1();" visible="true"/><label>Creates 3 sets containing the genes involved in 3 KEGG pathways</label></hbox>
					<hbox><button id="sample2" label="load example 2" onClick="samples.close();demo2();" visible="true"/><label>Creates 5 sets containing the targets of 5 microRNA identifiers using miRBase</label></hbox>
					<hbox><button id="sample3" label="load example 3" onClick="samples.close();demo3();" visible="true"/><label>Creates 1 set containing genes affected by the 'paclitaxel' chemical</label></hbox>
					
					
					
					</vbox>
				</popup>
				<popup id="pushsearch" action="onshow:anima.appear(#{self});onhide:anima.fade(#{self})">
					<label>Scroll down and push the search button</label>
					<timer id="pushsearchtimer" delay="10000" repeats="false">
						<attribute name="onTimer">
							pushsearch.close();
						</attribute>
					</timer>
				</popup>
				<popup id="gotocart" action="onshow:anima.appear(#{self});onhide:anima.fade(#{self})">
					<label>You can see your new sets in the gene-set cart!</label>
					
				</popup>
				<popup id="examplesadvice" action="onshow:anima.appear(#{self});onhide:anima.fade(#{self})">
					<label>Here you can find some examples!</label>					
				</popup>
				</div>
				<hbox id="sample1"><label >In this panel you will be able to retrieve genes by performing a query over a data source. Do you want to see some pre-configured </label><label style="color:blue;cursor:pointer" popup="samples" id="sampleslink">examples?</label></hbox>
			
			<hbox width="100%" height="100%" widths="150px,100%" style="padding-left:10px;">
				<hbox>
						<vbox spacing="0">
							<genesetbasket id="basketview" visible="false"/> 
							
							
							<vbox action="onshow:anima.appear(#{self});onhide:anima.fade(#{self})">	
								<image src="0organism.png"/>
								<groupbox mold="3d" width="300px">
									<caption label="Organism"/>
									<vbox>
										
										<label>Select the organism</label>
										
										<combobox id="organism" onSelect="organismChanged()">
										<comboitem label="&lt;select specie&gt;"/>
										<comboitem label="homo sapiens"/>
										<comboitem label="mus musculus"/>
										
										
										
										
										</combobox>
										
									</vbox>
									
								</groupbox>
							</vbox>
							
							
							<div id="sourcebox" visible="false"    action="onshow: anima.appear(#{self}); onhide: anima.slideUp(#{self})"> 
								<div>
								<vbox>	
									<image src="1source.png"/>
									<groupbox mold="3d" width="300px">
										<caption label="Source"/>
										<vbox>
									
											<label>Select the source to extract the gene set</label>
									
											<combobox width="250px" id="source" onChange="sourceChanged()"></combobox>
									
											</vbox>
								
									</groupbox>
								</vbox></div>
							</div>
							<vbox id="constraints" visible="false" action="onshow:anima.appear(#{self});onhide:anima.fade(#{self})">
								<image src="2query.png"/>
								
								<div id="queryboxdiv">
								</div>
								
								<image src="3name.png"/>
								<groupbox mold="3d" >
									<caption label="Name"/>
									<hbox>
										
										<label>Name: </label><textbox id="setname" onOK="search()" onChanging="searchbutton.disabled = (event.value.length()==0)"/><button id="searchbutton" label="search" onClick="search()"  disabled="true"/>
										
									</hbox>
									<label style="font-size:0.8em">
									If you selected "create one set per item", the name will be the prefix
									</label>
								</groupbox>
							</vbox>
							
							
						</vbox>
						
					
					
					
					
				</hbox>
				
				
				<div style="border-left:2px solid #d2d2d2;padding-left:5px;align:left; margin-left:10px" id="querymanagerbox">
				
				</div>
				
			</hbox>
			
		</vbox>
		
		</tabpanel>
		<tabpanel>
			<vbox width="100%">
				<!--<div id="popups2">
					<popup id="samplesets" action="onshow:anima.appear(#{self});">
						<vbox>
							<label>The sample sets contains some sets that could be imported with WhichGenes</label>
							<button id="samplesetsbutton" label="load sets" onClick="samplesets.close();democart();baskethelp.visible=false" visible="true"/>
						</vbox>
					</popup>
					
					
				</div>
				<hbox id="baskethelp"><label >The gene-set cart contains all your sets retrived with WichGenes. If you want, you can see some demo sets by clicking</label><label style="color:blue;cursor:pointer" popup="samplesets">here</label></hbox>
				-->
			<basketmanager id="basketmanager" width="100%"/>
			</vbox>
		</tabpanel>
	</tabpanels>
</tabbox>
</vbox>
	</center>	
	<south border="0" style="margin-top:0px">
		
		<div style="text-align:center" width="100%"><html><![CDATA[<a href="http://sing.ei.uvigo.es"><img border="0" src="sing.png"></a><span style="font-size:0.8em"> in collaboration with </span><a href="http://www.cnio.es"><img src="cnio_logo.png" border="0"></a>]]></html></div>
		
		
	</south>
	
	<zscript>
		<![CDATA[
		
		
		
		
		//populate combo with sources
		import es.uvigo.ei.sing.whichgenes.*;
		import es.uvigo.ei.sing.whichgenes.provider.*;
		import es.uvigo.ei.sing.whichgenes.query.*;
		import es.uvigo.ei.sing.whichgenes.geneset.*;
		import es.uvigo.ei.sing.whichgenes.zkgui.*;
		import java.util.*;
		import org.zkoss.zul.*;
		import es.uvigo.ei.sing.whichgenes.provider.gmxprovider.GMXManager;
		import org.zkoss.zk.ui.event.EventListener;

		import es.uvigo.ei.sing.whichgenes.zkgui.Util;
		import org.zkoss.zul.Timer;
		String getParameter(String name){
			Object item =  desktop.execution.nativeRequest.getParameter(name);
			if(item!=null) return item.toString();
			else return null;
		}
		
		System.out.println();
		String decodePass(){			
			return Util.DesEncrypter.decrypt(getParameter("p"));	
			
		}
		
		String login=null;
		String pass=null;
		String selectedSet=null;
		boolean activate;
		if (getParameter("t")!=null){
			if (getParameter("t").equals("sg")){
			// see group
				login = getParameter("l");
				pass = decodePass();			
				selectedSet = getParameter("s");
				
				
			}
			else if (getParameter("t").equals("a")) {
				login = getParameter("l");
				pass = decodePass();				
				activate = true;
			}
		}
		
		
		page.setTitle("WhichGenes 1.5");
		
		
		/*public class BasketListener implements Observer{
			public void update(Observable obs, Object obj){
				baskettab.setLabel("gene-set cart ("+obs.getSets().size()+" sets)");
				if (basket.getSets().size()>0) baskethelp.visible = false;
			}
		}*/
		Basket basket = new Basket();
		session.setAttribute("basket", basket);
		observer = new Observer(){
			public void update(Observable obs, Object obj){
				baskettab.setLabel("gene-set cart ("+obs.getSets().size()+" sets)");
				if (basket.getSets().size()>0) baskethelp.visible = false;
			}
		};
		basket.addObserver(observer);
		observer.update(basket,null); //produce an initial update...
		
		basketview.setBasket(basket);
		basketmanager.setBasket(basket);
		
		HashMap providers = new HashMap();
		
		
		void populateSourcesBox(){
			
			List l = ProvidersFacade.getProviders();
			providers.clear();
			Util.removeChilds(source);
			source.appendItem("<select source>");
			for (int i = 0; i<l.size(); i++){
				
				if (l.get(i).getOrganism().equalsIgnoreCase(organism.getSelectedItem().label)){
					String name = l.get(i).getName();
					if (ProvidersFacade.isOutOfService((GeneSetProvider) l.get(i))){
						name+=" [OUT OF SERVICE!]";
					}
					providers.put(name, l.get(i));
					source.appendItem(name);
					
				}
				
			 
			}
			
			
		}
		
		String sourcesIntro="";
		List l = ProvidersFacade.getProviders();
			
		HashMap providers = new HashMap();
		for (int i = 0; i<l.size(); i++){
			List providersOfOrganism = providers.get(l.get(i).getOrganism());
			
			if (providersOfOrganism == null){
				providersOfOrganism = new LinkedList();
				//providersOfOrganism.add(l.get(i));
				providers.put(l.get(i).getOrganism(), providersOfOrganism);	
			}
			providersOfOrganism.add(l.get(i));
			
		}
		
		Iterator it = providers.keySet().iterator();
		while(it.hasNext()){
			String organism = it.next();
			sourcesIntro+="<table border='0'><tr><td valign='middle'><img src='"+organism.replaceAll(" ", "_").toLowerCase()+".png'></td><td valign='middle'><h3>"+organism+"</h3></td></tr></table><ul>";
			
			List oproviders = providers.get(organism);
			for (int i =0; i<oproviders.size(); i++){
				GeneSetProvider prov = oproviders.get(i);
				source.appendItem(oproviders.get(i).getName());
				sourcesIntro+="<li><b>"+oproviders.get(i).getName()+".</b> "+oproviders.get(i).getDescription()+"</li>";
			}
			sourcesIntro+="</ul>";
		}
		
		
		
		Query q = null;
		org.zkoss.zk.ui.Component querybox;
		GeneSetProvider provider;
		
		
		void sourceChanged(){
								
			Util.removeChilds(queryboxdiv);
			
			
			messages.value="hola";
			constraints.visible=false;
			provider = providers.get(source.getSelectedItem().label);
			
			
			if (provider != null){
			
				if (ProvidersFacade.isOutOfService(provider)){
					Messagebox.show("This source is not responding as we expect. Please try later or send us an email (contact@whichgenes.org)"+setname.value, "Error", Messagebox.OK, Messagebox.ERROR);
				}else{
					q = provider.newQuery();
					querybox = getQueryBox(q);
					querybox.width="300px";
						
					querybox.setQuery(q);					
					queryboxdiv.appendChild(querybox);
					constraints.visible=true;
				}
				
			}else{
				Messagebox.show("Provider not found", "Error", Messagebox.OK, Messagebox.ERROR);
			}
			
		}
		
		
		org.zkoss.zk.ui.Component getQueryBox(Query q){

			try{ 
			Class c = Util.loadClass(q.getClass().getCanonicalName()+"ZKUI");
				return c.getConstructor(new Class[]{Query.class}).newInstance(new Object[]{q});
			}catch(ClassNotFoundException e){
				
				
				if (q instanceof FreeQuery){
					return new es.uvigo.ei.sing.whichgenes.zkgui.FreeQueryBox();
				}else if (q instanceof ConstrainedQuery){
					return new es.uvigo.ei.sing.whichgenes.zkgui.ConstrainedQueryBox();
				}
				
			}
			return null;
		}
		
		organism.setSelectedIndex(0);
		void organismChanged(){
			if (organism.getSelectedItem().label.indexOf("select")!=-1){
				sourcebox.visible = false;
				constraints.visible=false;
			}else{
					
				
			
				populateSourcesBox();
				source.selectedIndex=0;
				sourcebox.visible = true;
				constraints.visible=false;
			}
		}
		
		//messages.value="<void>";
		qmanager=null;
		void search(){
			QueryManager _qmanager = null; // the internal query manager that will be created
			if (basket.getByName(setname.value)!=null){
				Messagebox.show("The basket already has a set named: "+setname.value, "Error", Messagebox.OK, Messagebox.ERROR);
				return;
			}
			if(qmanager==null){
				def = page.getComponentDefinition("multiplequerymanager", false);
				
				qmanager = desktop.getWebApp().getUiFactory().newComponent(page, querymanagerbox, def, null);
				
				qmanager.setBasket(basket);
				qmanager.setListHeight("600px");
				qmanager.setWidth("100%");
				
			}
			if (q instanceof FreeQuery){
				boolean isMultiple = querybox.isOneSetPerSelectionSelected();
				
				if (isMultiple){
					
					String[] lines = querybox.getQuery().split("\n");
					queries = new Query[lines.length];
					for (int i = 0; i<queries.length; i++){
						queries[i] = provider.newQuery();
						queries[i].setQuery(lines[i]);
					}
					_qmanager = qmanager.newQueryPack(queries, setname.value);
									
				}else{
					if (querybox.getQuery() != null && !querybox.getQuery().equals("")){
						q.setQuery(querybox.getQuery());				
						_qmanager = qmanager.newQuery(q,setname.value);					
					}else{					
						Messagebox.show("The query field cannot be empty"+setname.value, "Error", Messagebox.OK, Messagebox.ERROR);
					}
				}
					
			
			}else if (q instanceof ConstrainedQuery){
				if (querybox.getConstrainedValues()==null || querybox.getConstrainedValues().size()==0){
					Messagebox.show("You have to select at least one value", "Error", Messagebox.OK, Messagebox.ERROR);
					
				}else{
					boolean isMultiple = querybox.isOneSetPerSelectionSelected();
					
					if (isMultiple){
						
						queries = new Query[querybox.getConstrainedValues().size()];
						for (int i = 0; i<queries.length; i++){
							queries[i] = provider.newQuery();
							queries[i].setConstrainedValues(java.util.Arrays.asList(new TreeNode[]{querybox.getConstrainedValues().get(i)}));
						}
						_qmanager = qmanager.newQueryPack(queries, setname.value);
						
					}else{
						q.setConstrainedValues(querybox.getConstrainedValues());
						_qmanager = qmanager.newQuery(q,setname.value);
					}
				}
			}
			
			if (searchbutton.getAttribute("demo")!=null){
				searchbutton.style="border:none";
				searchbutton.setAttribute("demo",null);
				_qmanager.addEventListener(QueryManager.ONFINISH_EVENT, new EventListener(){
					public void onEvent(Event arg0) throws Exception {
						
						Messagebox.show("The demo query has finished!. You can go to the gene-set cart (the second tab) to see your sets", "Info", Messagebox.OK, Messagebox.INFORMATION);	
						
						Timer t = new Timer(50);
						t.setParent(timers);
						t.addEventListener("onTimer", new EventListener(){
							public void onEvent(Event arg0) throws Exception {
								gotocart.open(baskettab);
							}
						});
						t.start();
						
						
						
					}
				});
			
			}
		
		}
		autologintimer.start();
		void autologin(){
		
		
			if (login!=null){
				loginbox.doLogin(login,pass,activate);
				tabbox.selectedIndex = 1;
				tabbox.invalidate();
				if(selectedSet!=null){
					
					if (basket.getByName(selectedSet)==null){
						Messagebox.show("Sorry, the set "+selectedSet+" is no longer available.", "Error", Messagebox.OK, Messagebox.ERROR);
					}else{
						basketmanager.selectSet(basket.getByName(selectedSet));
						basketmanager.doEditSelected();
						
						
						
					}
				}
			
			}
			centerbox.visible=true;
			sourceslabel.content = sourcesIntro;
		}
		
		
		/* DEMOS */
		
		int getIndexOfItem(String label, Combobox combobox){
			items = combobox.getItems();
			for (int i = 0; i<items.size(); i++){
				Comboitem item = items.get(i);
				if (item.label.equalsIgnoreCase(label)){
					return i;
				}
			}
		}
		
		
		
		void demo1(){
			organism.setSelectedIndex(getIndexOfItem("homo sapiens", organism));
			organismChanged();
			source.setSelectedIndex(getIndexOfItem("KEGG Pathway", source));
			sourceChanged();
			
			List selectedIds = new LinkedList();
			selectedIds.add("path:hsa05221");
			selectedIds.add("path:hsa04210");
			selectedIds.add("path:hsa03030");
			querybox.setSelectedIds(selectedIds, true);
			querybox.setOneSetPerSelectionSelected(true);
			setname.value="example1_KEGG";
			searchbutton.disabled=false;			
			searchbutton.style="border: 5px red solid";			
			searchbutton.setAttribute("demo", "demo1");
			pushsearch.open(searchbutton);
		}
		void demo2(){
			organism.setSelectedIndex(getIndexOfItem("homo sapiens", organism));
			organismChanged();
			source.setSelectedIndex(getIndexOfItem("mirbase targets", source));
			sourceChanged();
			querybox.setQueryText("let-7e\nmiR-30c\nmiR-125b\nmiR-130a\nmiR-335");
			querybox.setOneSetPerSelectionSelected(true);
			setname.value="example2_miRBase";
			searchbutton.disabled=false;			
			searchbutton.style="border: 5px red solid";	
			searchbutton.setAttribute("demo", "demo2");
			pushsearch.open(searchbutton);
			//pushsearchtimer.start();
		}
		void demo3(){
			organism.setSelectedIndex(getIndexOfItem("homo sapiens", organism));
			organismChanged();
			source.setSelectedIndex(getIndexOfItem("Chemical CTD", source));
			sourceChanged();
			querybox.setQueryText("paclitaxel");
			querybox.setOneSetPerSelectionSelected(false);
			setname.value="example3_paclitaxel_CTD";
			searchbutton.disabled=false;			
			searchbutton.style="border: 5px red solid";	
			searchbutton.setAttribute("demo", "demo3");
			pushsearch.open(searchbutton);
			//pushsearchtimer.start();
		}		
		void democart(){
		
			List sets = readSets("/es/uvigo/ei/sing/whichgenes/zkgui/samplegenesets.gmx");
			
			for (int i = 0; i<sets.size(); i++){
				basket.addGeneSet(sets.get(i));
			}
		}
		
		List readSets(String file){
			try{
			GMXManager manager = new GMXManager(file);
			List toret = new LinkedList();
			for(int i = 0; i< manager.getSetNames().size(); i++){
				String name = manager.getSetNames().get(i);
				GeneSet set = new GeneSet(name);
				List genes = manager.getSetGenes(name);
				for (int j = 0; j<genes.size(); j++){
					set.addGene(new Gene((String)genes.get(j)));
				}
				toret.add(set);
			}
			return toret;
			}catch(java.io.IOException e){
				e.printStackTrace();
				return null;
			}
			
		}
		]]>
	</zscript>
	
</borderlayout>
